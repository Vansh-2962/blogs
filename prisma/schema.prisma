// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                String               @id              @default(uuid())
  name              String                                        
  email             String               @unique
  password          String
  profilePic        String?
  
  Blogs             Blog[]
  Comments          Comment[]
  Likes             Like[]
  Bookmarks         Bookmark[]
  
  createdAt         DateTime                @default(now())     
  updatedAt         DateTime                @updatedAt                       
}

model Blog {
  id                String                  @id                @default(uuid())
  title             String
  content           String
  subtitle          String?
  coverImg          String?
  category          String
  
  author            User                    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId          String

  Comments          Comment[]
  Likes             Like[]
  Bookmarks         Bookmark[]

  createdAt         DateTime                @default(now())                            
}

model Comment {
  id                String                  @id                @default(uuid())   
  author            User                    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId          String
  content           String
  blog              Blog                    @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId            String                  
  createdAt         DateTime                @default(now())
}

model Like {
  id                String                  @id                @default(uuid())   
  author            User                    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId          String
  blog              Blog                    @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId            String
  createdAt         DateTime                @default(now())
}

model Bookmark {
  id                String                  @id                @default(uuid())   
  author            User                    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId          String
  blog              Blog                    @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId            String
  createdAt         DateTime                @default(now())
}